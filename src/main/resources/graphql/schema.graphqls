type Query {
    operators: [Operator]
    codespaces: [String]

    vehicles(
        lat: Float!
        lon: Float!
        range: Int!
        count: Int
        operators: [String]
        codespaces: [String]
        formFactors: [FormFactor]
        propulsionTypes: [PropulsionType]
        includeReserved: Boolean = false
        includeDisabled: Boolean = false
    ): [Vehicle]
}

type Operator {
    name: String
    codespace: String
}

type VehicleTypeAvailability {
    vehicleType: VehicleType!
    count: Int!
}

type Vehicle {
    id: ID!
    lat: Float!
    lon: Float!
    isReserved: Boolean
    isDisabled: Boolean
    currentRangeMeters: Float
    vehicleType: VehicleType
    pricingPlan: PricingPlan
    rentalUris: RentalUris
    system: System
}

type VehicleType {
    id: ID!
    formFactor: FormFactor!
    propulsionType: PropulsionType!
    maxRangeMeters: Float
    name: String
}

enum FormFactor {
    BICYCLE
    CAR
    MOPED
    SCOOTER
    OTHER
}

enum PropulsionType {
    HUMAN
    ELECTRIC_ASSIST
    ELECTRIC
    COMBUSTION
}

type PricingPlan {
    id: ID!
    url: String
    name: String
    currency: String
    price: Float
    isTaxable: Boolean
    description: String
    perKmPricing: [PricingSegment]
    perMinPricing: [PricingSegment]
    surgePricing: Boolean
}

type PricingSegment {
    start: Int
    rate: Float
    interval: Int
    end: Int
}

type RentalUris {
    android: String
    ios: String
    web: String
}

type System {
    id: ID!
    language: String!
    name: String!
    shortName: String
    operator: String
    url: String
    purchaseUrl: String
    startDate: String
    phoneNumber: String
    email: String
    feedContactEmail: String
    timezone: String!
    licenseUrl: String
    rentalApps: RentalApps
}

type RentalApps {
    ios: RentalApp
    android: RentalApp
}

type RentalApp {
    storeUri: String
    discoveryUri: String
}